/****************************************************************************************
 * *  pa6 - By: Ryan Hui, rhui1
 * *  BigIntegerTest.cpp
 * *  Big Integer Test File
 * *****************************************************************************************/
#include<iostream>
#include<string>
#include<stdexcept>
#include"BigInteger.h"

using namespace std;

int main() {

   string s1 = "912319123123912312391231239123123";
   string s2 = "+12345678900011000111000";
   string s3 = "-00000011111000004444400000777777";

   //BigInteger N;
   BigInteger A = BigInteger(s1);
   BigInteger B = BigInteger(s2);
   BigInteger C = BigInteger(s3);

   cout << endl;

   std::cout << "Printing BigIntegers from strings.\n";

   cout << "A = " << A << endl;
   cout << "B = " << B << endl;
   cout << "C = " << C << endl;
   cout << endl;

   std::cout << "Negating BigIntgers.\n";

   A.negate();
   B.negate();
   C.negate();

   cout << "A = " << A << endl;
   cout << "B = " << B << endl;
   cout << "C = " << C << endl;

   BigInteger num1 = BigInteger("+6");
   BigInteger num2 = BigInteger("-10");
   BigInteger num3 = BigInteger("0");
   cout << endl;

   std::cout << "Testing Matrix Operations.\n";
   // Performing various operations.
   BigInteger D = A+B+num1;
   BigInteger E = B+A+num2;
   BigInteger F = D-E+num3;
   BigInteger G = 45*A + 35*B + 777*C;
   BigInteger H = A*B-C;
   BigInteger I = B*A-C+G;
   BigInteger J = G*H*I*G*G;

   cout << "A = " << A << endl;
   cout << "B = " << B << endl;
   cout << "C = " << C << endl;
   cout << "D = " << D << endl;
   cout << "E = " << E << endl;
   cout << "F = " << F << endl;
   cout << "G = " << G << endl;
   cout << "H = " << H << endl;
   cout << "I = " << I << endl;
   cout << "J = " << J << endl;
   cout << endl;

   std::cout << "Testing Matrix Eqaulity.\n";
   cout << "(A==B) = " << ((A==B)?"True":"False") << endl;
   cout << "(A<B)  = " << ((A<B)? "True":"False") << endl;
   cout << "(A<=B) = " << ((A<=B)?"True":"False") << endl;
   cout << "(A>B)  = " << ((A>B)? "True":"False") << endl;
   cout << "(A>=B) = " << ((A>=B)?"True":"False") << endl;
   cout << "D = " << D << endl;
   cout << "E = " << E << endl;
   cout << "(D==E) = " << ((D==E)?"True":"False") << endl;
   cout << "F = " << F << endl;
   cout << "G = " << G << endl;
   cout << "H = " << H << endl;
   cout << "I = " << I << endl;
   cout << "(H==I) = " << ((H==I)?"True":"False") << endl;
   cout << "J = " << J << endl << endl;

   cout << endl;

   std::cout << "Testing Matrix Set equals.\n";
   A += B;
   B -= C;
   C *= J;
   cout << "A = " << A << endl;
   cout << "B = " << B << endl;
   cout << "C = " << C << endl;
   cout << endl;

   std::cout << "Long Operation.\n";
   cout << A*B*C*D*E*G*H*I*J << endl << endl;

   std::cout << "Negate Long Operation.\n";
   A = (A*B*C*D*E*G*H*I*J);
   A.negate();
   cout << "A = " << A << endl;
   cout << endl;

   std::cout << "Testing Matrix Make Zero.\n";
   A.makeZero();
   B.makeZero();
   C.makeZero();
   D.makeZero();
   E.makeZero();

   cout << "A = " << A << endl;
   cout << "B = " << B << endl;
   cout << "C = " << C << endl;
   cout << "D = " << D << endl;
   cout << "E = " << E << endl;

   cout << endl;

   return EXIT_SUCCESS;
}

/* OUTPUT
Printing BigIntegers from strings.
A = 912319123123912312391231239123123
B = 12345678900011000111000
C = -11111000004444400000777777

Negating BigIntgers.
A = -912319123123912312391231239123123
B = -12345678900011000111000
C = 11111000004444400000777777

Testing Matrix Operations.
A = -912319123123912312391231239123123
B = -12345678900011000111000
C = 11111000004444400000777777
D = -912319123136257991291242239234117
E = -912319123136257991291242239234133
F = 16
G = -41054351907761149365806990160092806
H = 11263198948427421932160417756042653342257277495665875223
I = 11263198948427421932119363404134892192891470505505782417
J = -8778111899399267110413320459482078478030220853224105183603475674356186542732345766436192816294745764762986372129616790951485199517391845822894205079770005032434840277784326776965785684487619578246257225187733780456

Testing Matrix Eqaulity.
(A==B) = False
(A<B)  = True
(A<=B) = True
(A>B)  = False
(A>=B) = False
D = -912319123136257991291242239234117
E = -912319123136257991291242239234133
(D==E) = False
F = 16
G = -41054351907761149365806990160092806
H = 11263198948427421932160417756042653342257277495665875223
I = 11263198948427421932119363404134892192891470505505782417
(H==I) = False
J = -8778111899399267110413320459482078478030220853224105183603475674356186542732345766436192816294745764762986372129616790951485199517391845822894205079770005032434840277784326776965785684487619578246257225187733780456


Testing Matrix Set equals.
A = -912319123136257991291242239234123
B = -11123345683344411000888777
C = -97533601353238697396319919909605399194851874634945138807494342380336960820795289780965907606846671238203352397724067273234882169098378578489147136241634008640506506836943334153563579434622939357639058374942302938980619219693486416561726312

Long Operation.
-37662908348518822244442653375749079565921314088651604471973852258715065331079861305465421860543001743617805988475269142408789734863746760384738695843902773834562067318291382169433829566955519768464851165610970664515216976827666932498359191932851343799265280054167466726240453747364361785387985582594519944473558300742652207157168168066802095875193518663809897575619414518909658478825013830314267144652691089166662247949374868092011999090970379031888560555451201510143862540982563625167297798284557550318943138674359117070436375078759408776788537134412832898212126465564075473973097050243887436864296179589288449050759114528097244975980826098119317857843096006691390807442656196136670325726822833097561246610485386504191872

Negate Long Operation.
A = 37662908348518822244442653375749079565921314088651604471973852258715065331079861305465421860543001743617805988475269142408789734863746760384738695843902773834562067318291382169433829566955519768464851165610970664515216976827666932498359191932851343799265280054167466726240453747364361785387985582594519944473558300742652207157168168066802095875193518663809897575619414518909658478825013830314267144652691089166662247949374868092011999090970379031888560555451201510143862540982563625167297798284557550318943138674359117070436375078759408776788537134412832898212126465564075473973097050243887436864296179589288449050759114528097244975980826098119317857843096006691390807442656196136670325726822833097561246610485386504191872

Testing Matrix Make Zero.
A =
B =
C =
D =
E =
*/
